## Continuous Integration Workflow
name: Build and Deploy
on: [push, pull_request]

# Target Branch Job
jobs:
  Lint-Build-Test:
    runs-on: ubuntu-latest
    steps:
      # Check Out Repository
      - uses: actions/checkout@v1

      # Install Node.js
      - uses: actions/setup-node@v1.4.4
        with:
          node-version: 16.13.2

      # Install Node Dependencies
      - name: Installing NodeJS Dependencies
        run: npm install

      # Run Build
      - name: Build
        env:
          NEXT_PUBLIC_STAGING_FIREBASE_API_KEY: ${{ secrets.STAGING_FIREBASE_API_KEY }}
          NEXT_PUBLIC_STAGING_FIREBASE_AUTH_DOMAIN: ${{ secrets.STAGING_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_STAGING_FIREBASE_PROJECT_ID: ${{ secrets.STAGING_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_STAGING_FIREBASE_STORAGE_BUCKET: ${{ secrets.STAGING_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_STAGING_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.STAGING_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_STAGING_FIREBASE_APP_ID: ${{ secrets.STAGING_FIREBASE_APP_ID }}
        run: npm run build

      # Run ESLint
      - name: ESLint Check
        run: npx eslint . --config .eslintrc.json --ext .js,.jsx,.ts,.tsx

      # Run Prettier
      - name: Prettier Check
        run: npx prettier --check . --config .prettierrc.json

      # Run Jest Unit Tests
      - name: Unit Tests
        run: npx jest

    # Deploy:
    #   needs: [Lint-Build-Test]
    #   runs-on: ubuntu-latest
    #   steps:
    #     # Re-Initialize Staging Server
    #     - if: github.ref == 'refs/heads/staging'
    #       name: Push Changes to Staging Server [LIVE]

    #     - if: github.ref == 'refs/heads/master'
    #       name: Push Changes to Production Server [LIVE]
